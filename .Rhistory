data_blocks_heatmap <- function(blocks){
# Heat map of a list of data blocks
heatmap_list <- list()
for(k in 1:length(blocks)){
heatmap_list[[k]] <- data_heatmap(blocks[[k]])
}
cowplot::plot_grid(plotlist=heatmap_list)
}
sample_toy_data <- function(n=200, dx=100, dy=500){
# for exact AJIVE figure 2: n=100, dx= 100, dy=10000
if(n %% 20 != 0){
stop('n must be divisible by 20')
}
if(dx %% 2 != 0){
stop('dx must be divisible by 2')
}
if(dy %% 10 != 0){
stop('dy must be divisible by 10')
}
X_joint <- cbind(rbind(matrix(1, nrow = n/2, ncol = dx/2),
matrix(-1, nrow = n/2, ncol = dx/2)),
matrix(0, nrow = n, ncol = dx/2))
X_indiv <- rbind(matrix(-1, nrow = n/4, ncol = dx),
matrix(1, nrow = n/4, ncol = dx),
matrix(-1, nrow = n/4, ncol = dx),
matrix(1, nrow = n/4, ncol = dx))
X_noise <- matrix(rnorm(n*dx), nrow = n, ncol = dx)
X_obs <- 5000 * (X_joint + X_indiv + X_noise)
Y_joint <- cbind(rbind(matrix(-1, nrow = n/2, ncol = dy/5),
matrix(1, nrow = n/2, ncol = dy/5)),
matrix(0, nrow = n, ncol = 4*dy/5))
Y_indiv <- cbind(rbind(matrix(1, nrow = n/5, ncol = dy/2),
matrix(-1, nrow = n/5, ncol = dy/2),
matrix(-1, nrow = n/5, ncol = dy/2),
matrix(1, nrow = n/5, ncol = dy/2),
matrix(1, nrow = n/5, ncol = dy/2)),
rbind(matrix(1, nrow = n/4, ncol = dy/2),
matrix(-1, nrow = n/2, ncol = dy/2),
matrix(1, nrow = n/4, ncol = dy/2)))
Y_noise <- matrix(rnorm(n*dy), nrow = n, ncol = dy)
Y_obs <- Y_joint + Y_indiv + Y_noise
list('1' = list('obs'=X_obs, 'joint' = X_joint, 'individual' = X_indiv, 'noise' = X_noise),
'2' = list('obs'=Y_obs, 'joint' = Y_joint, 'individual' = Y_indiv, 'noise' = Y_noise))
}
data <- sample_toy_data(n=200, dx=100, dy=500)
X_obs <- data[[1]][['obs']]
Y_obs <- data[[2]][['obs']]
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
panel.border = element_rect(fill = NA, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
panel.border = element_rect(size=5, color = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
panel.border = element_rect(size=5)) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
panel.border = element_rect(linetype= 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
panel.border = element_rect(linetype= 1, size=.5, colour = "red")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank()) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
panel.border = element_rect(linetype= 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
X_obs %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype= 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
data_heatmap <- function(data){
# Heatmap of a single data matrix
data %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
}
X_heatmap <- data_heatmap(data[[1]][['obs']])
data_heatmap(data[[1]][['obs']])
data <- sample_toy_data(n=200, dx=100, dy=500)
X_obs <- data[[1]][['obs']]
Y_obs <- data[[2]][['obs']]
X_heatmap <- data_heatmap(data[[1]][['obs']])
Y_heatmap <- data_heatmap(data[[2]][['obs']])
blocks <- list('1' = data[[1]][['obs']],
'2' = data[[2]][['obs']])
data_blocks_heatmap(blocks)
data_blocks_heatmap(blocks)
data_heatmap <- function(data, title='', xlab='', ylab='observation'){
# Heatmap of a single data matrix
data %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
labs(title=title,
x=xlab,
y=ylab)
}
data_blocks_heatmap(blocks)
data_blocks_heatmap <- function(blocks){
# Heat map of a list of data blocks
heatmap_list <- list()
for(k in 1:length(blocks)){
if(k==1){
ylab = 'observation'
}
else{
ylab= ''
}
heatmap_list[[k]] <- data_heatmap(blocks[[k]], ylab=ylab)
}
cowplot::plot_grid(plotlist=heatmap_list)
}
data_blocks_heatmap(blocks)
heatmap_list <- list()
for(k in 1:K){
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']])
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
}
K <- length(block_decomposition)
heatmap_list <- list()
block_decomposition <- data
K <- length(block_decomposition)
heatmap_list <- list()
for(k in 1:K){
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']])
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
}
cowplot::plot_grid(plotlist=heatmap_list)
?plot_grid
cowplot::plot_grid(plotlist=heatmap_list, ncol=K)
data_heatmap <- function(data, title='', xlab='', ylab=''){
# Heatmap of a single data matrix
data %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
labs(title=title,
x=xlab,
y=ylab)
}
heatmap_list <- list()
for(k in 1:K){
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']])
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
}
cowplot::plot_grid(plotlist=heatmap_list, ncol=K)
for(k in 1:K){
if(k==1){
ylab='observations'
}else{
ylab=''
}
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']])
if(k==1){
ylab='joint'
}
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
if(k==1){
ylab='individual'
}
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
if(k==1){
ylab='noise'
}
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']])
}
cowplot::plot_grid(plotlist=heatmap_list, ncol=K)
?geom_tile
data_heatmap <- function(data, title='', xlab='', ylab=''){
# Heatmap of a single data matrix
data %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value), legend=F) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
labs(title=title,
x=xlab,
y=ylab)
}
data_heatmap(data[[1]][['obs']])
?
?geom_tile
m
data_heatmap(data[[1]][['obs']])
data_heatmap <- function(data, title='', xlab='', ylab=''){
# Heatmap of a single data matrix
data %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value), show.legend=F) + # or geom_tile
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
labs(title=title,
x=xlab,
y=ylab)
}
data_heatmap(data[[1]][['obs']])
heatmap_list <- list()
for(k in 1:K){
if(k==1){
ylab='observations'
}else{
ylab=''
}
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='joint'
}
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='individual'
}
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='noise'
}
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
}
data_heatmap <- function(data, show_color_bar=TRUE, title='', xlab='', ylab=''){
# Heatmap of a single data matrix
# could use geom_raster or geom_tile -- I think the former is faster
data %>%
melt %>% # TODO: get error when using reshape2::
as_tibble() %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value), show.legend=show_color_bar) +
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
labs(title=title,
x=xlab,
y=ylab)
}
heatmap_list <- list()
for(k in 1:K){
if(k==1){
ylab='observations'
}else{
ylab=''
}
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='joint'
}
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='individual'
}
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='noise'
}
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
}
cowplot::plot_grid(plotlist=heatmap_list, ncol=K)
for(k in 1:K){
if(k==1){
ylab='observations'
}else{
ylab=''
}
heatmap_list[[k]] <- data_heatmap(block_decomposition[[k]][['obs']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='joint'
}
heatmap_list[[K + k]] <- data_heatmap(block_decomposition[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='individual'
}
heatmap_list[[2*K + k]] <- data_heatmap(block_decomposition[[k]][['individual']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='noise'
}
heatmap_list[[3*K + k]] <- data_heatmap(block_decomposition[[k]][['noise']],
ylab=ylab,
show_color_bar=FALSE)
}
cowplot::plot_grid(plotlist=heatmap_list, ncol=K)
decomposition_heatmaps <- function(block_decompositions){
# plots a heatmap of the given jive decomposotion for each data block
K <- length(block_decompositions)
heatmap_list <- list()
for(k in 1:K){
if(k==1){
ylab='observations'
}else{
ylab=''
}
heatmap_list[[k]] <- data_heatmap(block_decompositions[[k]][['obs']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='joint'
}
heatmap_list[[K + k]] <- data_heatmap(block_decompositions[[k]][['joint']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='individual'
}
heatmap_list[[2*K + k]] <- data_heatmap(block_decompositions[[k]][['individual']],
ylab=ylab,
show_color_bar=FALSE)
if(k==1){
ylab='noise'
}
heatmap_list[[3*K + k]] <- data_heatmap(block_decompositions[[k]][['noise']],
ylab=ylab,
show_color_bar=FALSE)
}
cowplot::plot_grid(plotlist=heatmap_list, ncol=K)
}
decomposition_heatmaps(sampled_data)
sampled_data <- sample_toy_data(n=200, dx=100, dy=500)
decomposition_heatmaps(sampled_data)
sampled_data <- sample_toy_data(n=200, dx=100, dy=500)
apply(sampled_data, function(x)[['obs']])
apply(sampled_data, function(x) x[['obs']])
lapply(sampled_data, function(x) x[['obs']])
blah <- lapply(sampled_data, function(x) x[['obs']])
length(blah)
.libPaths()
devtools::load_all(".")
sample_toy_data()
devtools::use_package('cowplot')
devtools::use_package('reshape2')
devtools::use_package('tidyverse')
devtools::use_package('tidyverse')
devtools::use_package('reshape2')
search()
?ifelse
devtools::use_package('magrittr')
devtools::use_package("ggplot2", "Suggests")
devtools::use_package("cowplot", "Suggests")
devtools::use_package("reshape2", "Suggests")
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::document()
?sample_toy_data
?dplyr
devtools::document()
?bibentry.
?bibentry
citation('tidytext')
devtools::document()
devtools::check()
devtools::load_all(".")
sampled_data <- sample_toy_data(n=200, dx=100, dy=500)
X_obs <- sampled_data[[1]][['obs']]
Y_obs <- sampled_data[[2]][['obs']]
data_heatmap(sampled_data[[1]][['obs']])
data_heatmap <- function(data, show_color_bar=TRUE, title='', xlab='', ylab=''){
# Heatmap of a single data matrix
print('haha')
if (!requireNamespace("ggplot2", quietly = TRUE)) {
stop("The package 'ggplot2' is needed for this function to work. Please install it.",
call. = FALSE)
}
if (!requireNamespace("reshape2", quietly = TRUE)) {
stop("The package 'reshape2' is needed for this function to work. Please install it.",
call. = FALSE)
}
# could use geom_raster or geom_tile -- I think the former is faster
ggplot(data=as.data.frame(reshape2::melt(data)),
aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = value), show.legend=show_color_bar) +
scale_fill_gradient2(low='blue', high='red') +
theme(panel.background = element_blank(),
axis.line = element_blank(),
panel.border = element_rect(linetype = 1, size=.5, colour = "grey80")) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
labs(title=title,
x=xlab,
y=ylab)
}
data_heatmap(sampled_data[[1]][['obs']])
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
diag(1.2)
diag(3.1)
?diag
x <- 1
length(x)
diag(1, nrow=1, ncol=1)
library(devtools)
